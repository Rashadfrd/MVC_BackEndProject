@{
    ViewData["Title"] = "Index";
}
@model IEnumerable<Slider>
<div class="table-responsive text-nowrap">
    <table class="table card-table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Image</th>
                <th>Title</th>
                <th>Subtitle</th>
                <th>Description</th>
                <th>Place</th>
                <th>IsDeleted</th>
                <th>Order</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody class="table-border-bottom-0">
            @foreach (var item in Model)
            {
                <tr>
                    <td><i class="fab fa-angular fa-lg text-danger me-3"></i> <strong>@item.Id</strong></td>
                    <td><img src="~/images/demos/demo1/slides/@item.ImageUrl" width="50" /></td>
                    <td>
                        @if (item.Title.Length > 15)
                        {
                            @item.Title.Substring(0, 15)
                            ;
                        }
                        else
                        {
                            @item.Title
                        }
                    </td>
                    <td>
                        @if (item.SubTitle.Length > 15)
                        {
                            @item.SubTitle.Substring(0, 15)
                            ;
                        }
                        else
                        {
                            @item.SubTitle
                        }
                    </td>
                    <td>
                        @if (item.Description.Length > 15)
                        {
                            @item.Description.Substring(0, 15)
                            ;
                        }
                        else
                        {
                            @item.Description
                        }
                    </td>
                    <td>
                        @{
                            if (item.Place == true)
                            {
                                <span>Left</span>
                            }
                            else if (item.Place == false)
                            {
                                <span>Right</span>
                            }
                            else
                            {
                                <span>Middle</span>
                            }
                        }
                    </td>
                    <td>
                        @if (@item.IsDeleted == false)
                        {
                            <span class="badge bg-label-success me-1">Active</span>
                        }
                        else
                        {
                            <span class="badge bg-label-danger me-1">Deleted</span>
                        }
                    </td>
                    <td>
                        @item.Order
                    </td>
                    <td>
                        <div class="dropdown">
                            <button type="button" class="btn p-0 dropdown-toggle hide-arrow" data-bs-toggle="dropdown">
                                <i class="bx bx-dots-vertical-rounded"></i>
                            </button>
                            <div class="dropdown-menu">
                                <a id="btn-btn" class="dropdown-item" asp-controller="Slider" asp-action="Update" asp-route-id="@item.Id"><i class="bx bx-edit-alt me-1"></i> Edit</a>
                                <a id="btn-delete" class="dropdown-item slider-del" asp-controller="Slider" asp-action="Delete" asp-route-id="@item.Id"><i class="bx bx-trash me-1"></i> Delete</a>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section scripts{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        const swalWithBootstrapButtons = Swal.mixin({
            customClass: {
                confirmButton: 'btn btn-success',
                cancelButton: 'btn btn-danger'
            },
            buttonsStyling: false
        })
        $(".slider-del").click(function(e) {
            e.preventDefault();
            let a = $(this)
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "You won't be able to revert this!",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, delete it!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "GET",
                        url: a.attr('href'),
                    }).done(function() {
                        let status = a.parent().parent().parent().prev().prev();
                        if (status.text().trim().toLowerCase() == "active") {
                            status.children().toggleClass("bg-label-success bg-label-danger");
                            status.children().text("Deleted")
                        }
                        else {
                            status.parent().remove()
                            swalWithBootstrapButtons.fire(
                                'Deleted!',
                                'Your file has been deleted.',
                                'success'
                            )
                        }
                    })
                } else if (
                    /* Read more about handling dismissals below */
                    result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                        'Cancelled',
                    )
                }
            })
        })

    </script>
}
